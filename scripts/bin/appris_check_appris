#!/bin/bash

# -----------------------------------------------------------------------------
# Load environmental variables
# If you do not trust the path, configure below:
SYSTEM=`uname -s`
if [ "$SYSTEM" = Darwin ]
then
	source /etc/bashrc
	source /etc/profile
	source ${HOME}/.bash_profile
elif [ "$SYSTEM" = Linux ]
then
	source /etc/profile
	source /etc/bash.bashrc
	source ${HOME}/.bashrc
fi

VER=0.1b
VERDATE="1-Apr-2013"

FILENAME=`basename $0`
FILENAME="${FILENAME%.*}"
DIRNAME=`dirname $0`

INPUT_DIR=""
OUTPUT_DIR=""
LOG_LEVEL=""

# -----------------------------------------------------------------------------
# Load external functions
source ${DIRNAME}/appris_env

# -----------------------------------------------------------------------------
# Usage

USAGE="
\n
 APPRIS's binary package.\n
\n
 Name:\n
\t appris_check_appris\n
\n
 Description:\n
\t Check and get runtimes from annotations.\n
\n
 Required arguments:\n
\t -c [-conf]\n
\t\t Hsap  - Homo sapiens -\n
\t\t Mmus  - Mus musculus -\n
\t\t Rnor  - Rattus norvegicus -\n
\t\t Drer  - Danio rerio -\n
\t\t Dmel  - Drosophila melanogaster -\n
\t\t Cele  - Caenorhabditis elegans -\n
\t\t Lpar  - Lynx pardinus -\n
\n
 Optional arguments:\n
\t -i, -in\n
\t\t Input path\n
\n
\t -o, -out\n
\t\t Output path\n
\n
\t -l, -loglevel\n
\t\t info\n
\t\t debug\n
\n
\t -v [version]\n
\t -h [help]\n
\n
\n
 Author: Jose Manuel Rodriguez Carrasco -jmrodriguez@cnio.es- (INB-GN2,CNIO)\n
\n
"

# -----------------------------------------------------------------------------
# Get input parameters

while expr "//$1" : //- >/dev/null
do
	case "$1" in
		-c | -conf )
			case "$2" in
				Hsap | Mmus | Rnor | Drer | Sscr | Dmel | Cele | Lpar )
					SPECIE=$2
					;;
				* )
					echo Unknown method name: "$2" 
					echo -e $USAGE
					exit 1
					;;
			esac
			shift
			;;	
		-i | -in )
        	INPUT_DIR=$2
        	shift
			;;
		-o | -out )
        	OUTPUT_DIR=$2
        	shift
			;;
		-l | -loglevel )
			case "$2" in
				info | debug )
		        	LOG_LEVEL=$2
					;;
				* )
					echo Unknown loglevel: "$2" 
					echo -e $USAGE
					exit 1
					;;
			esac
			shift
			;;			
		-h | -help )
			echo -e $USAGE		
			exit
			;;
		-v | -version )
			echo "$VER", "$VERDATE"
			exit
			;;
		* )
			echo Unknown option: "$1"
			echo -e $USAGE
			exit 1
			;;
	esac
	shift
done

if [ "${SPECIE}" == "" ]; then
	echo You must specify at least one SPECIE!
	echo -e $USAGE
	exit 1
fi

# -----------------------------------------------------------------------------
# Prepare Environment from given SPECIE
load_appris_specie_env "${SPECIE}"

# -----------------------------------------------------------------------------
# Get method script name
METHOD_SCRIPT="check_appris"

# -----------------------------------------------------------------------------
# Required var declarations
if [ "${APPRIS_ANNOT_DIR}" == "" ]; then
	echo Error within env variables: APPRIS_ANNOT_DIR!
	exit 1
fi
if [ "${APPRIS_SPECIE}" == "" ]; then
	echo Error within env variables: APPRIS_SPECIE!
	exit 1
fi
if [ "${APPRIS_E_VERSION}" == "" ]; then
	echo Error within env variables: APPRIS_E_VERSION!
	exit 1
fi

# -----------------------------------------------------------------------------
# Var declarations
if [ "${INPUT_DIR}" == "" ]; then
	INPUT_DIR="${APPRIS_ANNOT_DIR}"
fi
if [ "${OUTPUT_DIR}" == "" ]; then
	OUTPUT_DIR="${APPRIS_ANNOT_DIR}"
fi
SPECIEID=`echo ${APPRIS_SPECIE} | tr "[:upper:]" "[:lower:]" | sed 's/ /_/'`
OUTPUT_FILENAME="${OUTPUT_DIR}/${METHOD_SCRIPT}.${SPECIEID}"
TOTAL_OUTPUT_FILE="${OUTPUT_FILENAME}.txt"

# -----------------------------------------------------------------------------
# Optional var declarations
GENCODE_PARAMETERS=""
if [[ "${GENCODE_ANNOTATION_FILE}" != "" && "${GENCODE_TRANSCRIPT_FILE}" != "" && "${GENCODE_TRANSLATION_FILE}" != "" ]]; then
	GENCODE_PARAMETERS=" --data=${GENCODE_ANNOTATION_FILE}"
	GENCODE_PARAMETERS+=" --transc=${GENCODE_TRANSCRIPT_FILE}"
	GENCODE_PARAMETERS+=" --transl=${GENCODE_TRANSLATION_FILE}"
else
	if [ "${APPRIS_E_VERSION}" != "" ]; then
		ENSEMBL_PARAMETERS=" --e-version=${APPRIS_E_VERSION}"
	else
		echo Error within env variables: APPRIS required GENCODE or ENSEMBL data input!!
		exit 1
	fi		
fi

# -----------------------------------------------------------------------------
# Run method for every chromosome
CHROMOSOME=(${APPRIS_CHR_LIST//,/ })
INDEX=${#CHROMOSOME[@]}
for ((i=0;i<$INDEX;i++)); do

	# local vars
	CHR="${CHROMOSOME[${i}]}"
	POSITION="${CHR}"
	SCRIPT="${APPRIS_SCRIPTS_DIR}/${METHOD_SCRIPT}.pl"
	OUTPUT_FILE="${OUTPUT_FILENAME}.${POSITION}.txt"
	
	# local parameters
	LOG_PARAMETERS=""
	if [ "$LOG_LEVEL" != "" ]; then
		LOG_FILENAME="${APPRIS_WORKSPACE_LOG_DIR}/${FILENAME}.${POSITION}.log"
		LOG_PARAMETERS="--loglevel=${LOG_LEVEL} --logappend --logfile=${LOG_FILENAME}"
	fi	

	# print trace
	echo "================="
	echo "perl ${SCRIPT}"
	echo " --position=${CHR}"
	echo " --species="${APPRIS_SPECIE}""
	echo " --e-version="${APPRIS_E_VERSION}""	
	echo " --inpath=${INPUT_DIR}"
	echo " --outfile=${OUTPUT_FILE}"
	echo " ${GENCODE_PARAMETERS}"
	echo " ${LOG_PARAMETERS}"

	# run method
	perl ${SCRIPT} \
		--position=${CHR} \
		--species="${APPRIS_SPECIE}" \
		--e-version=${APPRIS_E_VERSION} \
		--inpath=${INPUT_DIR}/ \
		--outfile=${OUTPUT_FILE} \
		${GENCODE_PARAMETERS} \
		${LOG_PARAMETERS}
	echo "================="
	
	# concatenate outputs
	echo "================="
	echo "cat ${OUTPUT_FILE} >> ${TOTAL_OUTPUT_FILE}"
	cat ${OUTPUT_FILE} >> ${TOTAL_OUTPUT_FILE}
	echo "================="
		
done